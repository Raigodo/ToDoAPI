// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoList.API.DAL;

#nullable disable

namespace ToDoList.API.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230526070205_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToDoList.API.Domain.Entities.GroupMemberEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("ApiGroupsUsers");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.TaskBoxEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociatedGroupId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParrentBoxId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedGroupId");

                    b.HasIndex("ParrentBoxId");

                    b.ToTable("ApiTaskBoxes");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.TaskEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParrentBoxId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParrentBoxId");

                    b.ToTable("ApiTasks");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApiUsers");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.UserGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApiGroups");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.GroupMemberEntity", b =>
                {
                    b.HasOne("ToDoList.API.Domain.Entities.UserGroupEntity", "Group")
                        .WithMany("MembersInGroup")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToDoList.API.Domain.Entities.UserEntity", "User")
                        .WithMany("MemberingGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.TaskBoxEntity", b =>
                {
                    b.HasOne("ToDoList.API.Domain.Entities.UserGroupEntity", "AssociatedGroup")
                        .WithMany("AcessibleBoxes")
                        .HasForeignKey("AssociatedGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToDoList.API.Domain.Entities.TaskBoxEntity", "ParrentBox")
                        .WithMany("SubFolders")
                        .HasForeignKey("ParrentBoxId");

                    b.Navigation("AssociatedGroup");

                    b.Navigation("ParrentBox");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.TaskEntity", b =>
                {
                    b.HasOne("ToDoList.API.Domain.Entities.TaskBoxEntity", "ParrentBox")
                        .WithMany("Tasks")
                        .HasForeignKey("ParrentBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParrentBox");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.TaskBoxEntity", b =>
                {
                    b.Navigation("SubFolders");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.UserEntity", b =>
                {
                    b.Navigation("MemberingGroups");
                });

            modelBuilder.Entity("ToDoList.API.Domain.Entities.UserGroupEntity", b =>
                {
                    b.Navigation("AcessibleBoxes");

                    b.Navigation("MembersInGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
